#!/usr/bin/make -f

INSTALLDIR := /tmp/@OECP_NAME@

build: build-stamp
	@CMAKE_MAKE_PROGRAM@ segw -j4 -C @PROJECT_BINARY_DIR@

build-stamp:
	touch build-stamp

clean:
#	make -C @PROJECT_BINARY_DIR@ clean
	rm -f build-stamp
	rm -rf $(INSTALLDIR)

install: build
	install -d $(INSTALLDIR)/usr/local/lib
#	install -m 755 @PROJECT_BINARY_DIR@/lib*.so $(INSTALLDIR)/usr/local/lib
	install -m 755 @PROJECT_BINARY_DIR@/libsmf_config.so $(INSTALLDIR)/usr/local/lib
	install -m 755 @PROJECT_BINARY_DIR@/libsmf_ipt.so $(INSTALLDIR)/usr/local/lib
	install -m 755 @PROJECT_BINARY_DIR@/libsmf_ipt_bus.so $(INSTALLDIR)/usr/local/lib
	install -m 755 @PROJECT_BINARY_DIR@/libsmf_serial_bus.so $(INSTALLDIR)/usr/local/lib
	install -m 755 @PROJECT_BINARY_DIR@/libsmf_hci.so $(INSTALLDIR)/usr/local/lib
#	install -m 755 @PROJECT_BINARY_DIR@/libsmf_mbus.so $(INSTALLDIR)/usr/local/lib
#	install -m 755 @PROJECT_BINARY_DIR@/libsmf_iec.so $(INSTALLDIR)/usr/local/lib
#	install -m 755 @PROJECT_BINARY_DIR@/libsmf_sml.so $(INSTALLDIR)/usr/local/lib
#	install -m 755 @PROJECT_BINARY_DIR@/libsmf_sml_bus.so $(INSTALLDIR)/usr/local/lib

	install -m 755 @cyng_db@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_io@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_log@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_obj@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_parse@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_rnd@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_sql@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_sqlite3@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_store@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_sys@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_task@ $(INSTALLDIR)/usr/local/lib
	install -m 755 @cyng_vm@ $(INSTALLDIR)/usr/local/lib

#	crypto lib
	install -m 755 @crypto@ $(INSTALLDIR)/usr/local/lib

	# maybe another path is required to build in a docker environment
	install -m 755 @Boost_LIBRARY_DIRS@/libboost_filesystem.so.1.75.0 $(INSTALLDIR)/usr/local/lib/libboost_filesystem.so.1.75.0
	install -m 755 @Boost_LIBRARY_DIRS@/libboost_program_options.so.1.75.0 $(INSTALLDIR)/usr/local/lib/libboost_program_options.so.1.75.0
	install -m 755 @Boost_LIBRARY_DIRS@/libboost_random.so.1.75.0 $(INSTALLDIR)/usr/local/lib/libboost_random.so.1.75.0
	install -m 755 @Boost_LIBRARY_DIRS@/libboost_system.so.1.75.0 $(INSTALLDIR)/usr/local/lib/libboost_system.so.1.75.0
	install -m 755 @Boost_LIBRARY_DIRS@/libboost_thread.so.1.75.0 $(INSTALLDIR)/usr/local/lib/libboost_thread.so.1.75.0

	install -d $(INSTALLDIR)/usr/local/sbin
	install -m 755 @PROJECT_BINARY_DIR@/src/nodes/segw/segw $(INSTALLDIR)/usr/local/sbin
#	install -m 755 @CYNG_ROOT_DEV@/@CYNG_ROOT_BUILD_SUBDIR@/sqlite3 $(INSTALLDIR)/usr/local/sbin

	install -d $(INSTALLDIR)/usr/local/etc/smf
	install -m 644 @PROJECT_BINARY_DIR@/config/segw_v0.9.cfg $(INSTALLDIR)/usr/local/etc

#Any .service file found in /usr/local/lib/systemd/system is hooked into the systemd infrastructure on startup and will be executed.
	install -d $(INSTALLDIR)/usr/local/lib/systemd/system
	install -m 644 @PROJECT_BINARY_DIR@/config/segw.service $(INSTALLDIR)/usr/local/lib/systemd/system

.PHONY: build clean install
