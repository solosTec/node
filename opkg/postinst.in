#!/bin/sh
echo "remove obsolete symbolic links"

rm -f /usr/lib/libboost_chrono.so
rm -f /usr/lib/libboost_date_time.so
rm -f /usr/lib/libboost_filesystem.so
rm -f /usr/lib/libboost_prg_exec_monitor.so
rm -f /usr/lib/libboost_program_options.so
rm -f /usr/lib/libboost_random.so
rm -f /usr/lib/libboost_regex.so
rm -f /usr/lib/libboost_system.so
rm -f /usr/lib/libboost_thread.so
rm -f /usr/lib/libboost_timer.so
rm -f /usr/lib/libboost_unit_test_framework.so

echo "remove obsolete libraries"

rm -f /usr/lib/libboost_chrono.so.1.69.0               
rm -f /usr/lib/libboost_program_options.so.1.69.0      
rm -f /usr/lib/libboost_thread.so.1.69.0
rm -f /usr/lib/libboost_date_time.so.1.69.0            
rm -f /usr/lib/libboost_random.so.1.69.0               
rm -f /usr/lib/libboost_timer.so.1.69.0
rm -f /usr/lib/libboost_filesystem.so.1.69.0           
rm -f /usr/lib/libboost_regex.so.1.69.0                
rm -f /usr/lib/libboost_unit_test_framework.so.1.69.0
rm -f /usr/lib/libboost_prg_exec_monitor.so.1.69.0     
rm -f /usr/lib/libboost_system.so.1.69.0

echo "set symbolic links to Boost library"

rm -f /usr/local/lib/libboost_program_options.so
ln -s /usr/local/lib/libboost_program_options.so   	/usr/local/lib/libboost_program_options.so.1.75.0

rm -f /usr/local/lib/libboost_thread.so
ln -s /usr/local/lib/libboost_thread.so 			/usr/local/lib/libboost_thread.so.1.75.0

rm -f /usr/local/lib/libboost_random.so 
ln -s /usr/local/lib/libboost_random.so 			/usr/local/lib/libboost_random.so.1.75.0

rm -f /usr/local/lib/libboost_filesystem.so
ln -s /usr/local/lib/libboost_filesystem.so 		/usr/local/lib/libboost_filesystem.so.1.75.0
#ln -s /usr/local/lib/libboost_regex.so 			/usr/local/lib/libboost_regex.so.1.75.0

rm -f /usr/local/lib/libboost_system.so
ln -s /usr/local/lib/libboost_system.so 			/usr/local/lib/libboost_system.so.1.75.0

echo "${PROJECT_NAME} library (SMF project) is installed"

# create lib links in /usr/lib/ /usr/local/lib/
libfiles=$(find /usr/local/lib/ -name '*')
for libfile in ${libfiles}; do
	tmpfilename="/usr/lib/$(basename ${libfile})"
	if [ ! -f ${tmpfilename} ]; then
		ln -s ${libfile} ${tmpfilename}
	fi
done

echo "${PROJECT_NAME} shared libraries available"

echo "${PROJECT_NAME} create default configuration"
/usr/local/sbin/segw -C/usr/local/etc/segw_v0.9.cfg -D

echo "${PROJECT_NAME} initialize database"
/usr/local/sbin/segw -C/usr/local/etc/segw_v0.9.cfg -I

echo "${PROJECT_NAME} remove previous configuration"
/usr/local/sbin/segw -C/usr/local/etc/segw_v0.9.cfg --clear

echo "${PROJECT_NAME} load default configuration into database"
/usr/local/sbin/segw -C/usr/local/etc/segw_v0.9.cfg -T

systemctl daemon-reload
#systemctl start segw

echo "service configuration updated"
